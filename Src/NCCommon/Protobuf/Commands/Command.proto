import "AddCommand.proto";
import "BulkAddCommand.proto";
import "BulkGetCommand.proto";
import "BulkInsertCommand.proto";
import "BulkRemoveCommand.proto";
import "ClearCommand.proto";
import "ContainsCommand.proto";
import "CountCommand.proto";
import "DisposeCommand.proto";
import "GetCacheItemCommand.proto";
import "GetCommand.proto";
import "GetEnumeratorCommand.proto";
import "GetHashmapCommand.proto";
import "GetThresholdSizeCommand.proto";
import "GetTypeInfoMapCommand.proto";
import "InitCommand.proto";
import "InsertCommand.proto";
import "RegisterKeyNotifCommand.proto";
import "RegisterBulkKeyNotifCommand.proto";
import "RegisterNotifCommand.proto";
import "RemoveCommand.proto";
import "SearchCommand.proto";
import "LockCommand.proto";
import "IsLockedCommand.proto";
import "LockVerifyCommand.proto";
import "UnlockCommand.proto";
import "UnRegisterKeyNotifCommand.proto";
import "UnRegisterBulkKeyNotifCommand.proto";
import "GetLoggingInfoCommand.proto";
import "BulkDeleteCommand.proto";
import "DeleteCommand.proto";
import "GetNextChunkCommand.proto";
import "AddAttributeCommand.proto";
import "GetProductVersionCommand.proto";
import "GetServerMappingCommand.proto";
import "GetOptimalServerCommand.proto";
import "GetRunningServersCommand.proto";

option java_outer_classname="CommandProtocol";
package Alachisoft.NCache.Common.Protobuf;

message Command 
{
	enum Type 
	{
		ADD = 1;
		ADD_BULK = 2;
		GET_BULK = 3;
		INSERT_BULK = 4;
		REMOVE_BULK = 5;
		CLEAR = 6;
		CONTAINS = 7;
		COUNT = 8;
		DISPOSE = 9;
		GET_CACHE_ITEM = 10;
		GET = 11;
		GET_ENUMERATOR = 12;
		GET_HASHMAP = 13;
		GET_THRESHOLD_SIZE = 14;
		GET_TYPEINFO_MAP = 15;
		INIT = 16;
		INSERT = 17;
		REGISTER_KEY_NOTIF = 18;
		REGISTER_NOTIF = 19;
		REMOVE = 20;
		SEARCH = 21;
		LOCK = 22;
		UNLOCK = 23;
		ISLOCKED = 24;
		LOCK_VERIFY = 25;
		UNREGISTER_KEY_NOTIF = 26;	
		UNREGISTER_BULK_KEY_NOTIF = 27;	
		REGISTER_BULK_KEY_NOTIF = 28;
		GET_LOGGING_INFO = 29;
	    DELETE_BULK = 30;
		DELETE = 31;
		GET_NEXT_CHUNK=32;
		ADD_ATTRIBUTE = 33;
		GET_PRODUCT_VERSION = 34;
		GET_SERVER_MAPPING = 35;
		GET_OPTIMAL_SERVER = 36;
		GET_RUNNING_SERVERS = 37;
	}
	
	optional Type type = 1;
	optional string version = 2;
	optional AddCommand addCommand = 3;
	optional BulkAddCommand bulkAddCommand = 4;
	optional BulkGetCommand bulkGetCommand = 5;
	optional BulkInsertCommand bulkInsertCommand = 6;
	optional BulkRemoveCommand bulkRemoveCommand = 7;
	optional ClearCommand clearCommand = 8;
	optional ContainsCommand containsCommand = 9;
	optional CountCommand countCommand = 10;
	optional DisposeCommand disposeCommand = 11;
	optional GetCacheItemCommand getCacheItemCommand = 12;
	optional GetCommand getCommand = 13;
	optional GetEnumeratorCommand getEnumeratorCommand = 14;
	optional GetHashmapCommand getHashmapCommand = 15;
	optional GetThresholdSizeCommand getThresholdSizeCommand = 16;
	optional GetTypeInfoMapCommand getTypeInfoMapCommand = 17;
	optional InitCommand initCommand = 18;
	optional InsertCommand insertCommand = 19;
	optional RegisterKeyNotifCommand registerKeyNotifCommand= 20;
	optional RegisterNotifCommand registerNotifCommand = 21;
	optional RemoveCommand removeCommand = 22;
	optional SearchCommand searchCommand = 23;
	optional LockCommand lockCommand = 24;
	optional UnlockCommand unlockCommand = 25;
	optional IsLockedCommand isLockedCommand = 26;
	optional LockVerifyCommand lockVerifyCommand = 27;
	optional UnRegisterKeyNotifCommand unRegisterKeyNotifCommand = 28;
	optional UnRegisterBulkKeyNotifCommand unRegisterBulkKeyNotifCommand = 29;
	optional RegisterBulkKeyNotifCommand registerBulkKeyNotifCommand = 30;
	optional GetLoggingInfoCommand getLoggingInfoCommand = 31;
	optional int64 requestID = 32;
	optional int32 commandVersion = 33 [default=0];
	optional int64 clientLastViewId = 34 [default=-1];
	optional BulkDeleteCommand bulkDeleteCommand = 35;
	optional DeleteCommand deleteCommand = 36;
	optional string intendedRecipient = 37 [default = ""];
	optional GetNextChunkCommand getNextChunkCommand = 38;
	optional AddAttributeCommand addAttributeCommand = 39;
	optional GetProductVersionCommand getProductVersionCommand = 40;
	optional GetServerMappingCommand getServerMappingCommand = 41;
	optional GetOptimalServerCommand getOptimalServerCommand = 42;
	optional GetRunningServersCommand getRunningServersCommand = 43;


	}
