//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: GroupEnumerationPointer.proto
namespace Alachisoft.NCache.Common.Protobuf
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"GroupEnumerationPointer")]
  public partial class GroupEnumerationPointer : global::ProtoBuf.IExtensible
  {
    public GroupEnumerationPointer() {}
    

    private int _chunkId = default(int);
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"chunkId", DataFormat = global::ProtoBuf.DataFormat.ZigZag)]
    [global::System.ComponentModel.DefaultValue(default(int))]
    public int chunkId
    {
      get { return _chunkId; }
      set { _chunkId = value; }
    }

    private string _id = "";
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"id", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string id
    {
      get { return _id; }
      set { _id = value; }
    }

    private string _group = "";
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"group", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string group
    {
      get { return _group; }
      set { _group = value; }
    }

    private string _subGroup = "";
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"subGroup", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string subGroup
    {
      get { return _subGroup; }
      set { _subGroup = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
