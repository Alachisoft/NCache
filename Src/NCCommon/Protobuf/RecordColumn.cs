//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: RecordColumn.proto
// Note: requires additional types generated from: ColumnType.proto
// Note: requires additional types generated from: ColumnValue.proto
// Note: requires additional types generated from: AggregateFunctionType.proto
// Note: requires additional types generated from: ColumnDataType.proto
namespace Alachisoft.NCache.Common.Protobuf
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RecordColumn")]
  public partial class RecordColumn : global::ProtoBuf.IExtensible
  {
    public RecordColumn() {}
    
    private string _name = "";
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string name
    {
      get { return _name; }
      set { _name = value; }
    }

    private bool _isHidden = default(bool);
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"isHidden", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool isHidden
    {
      get { return _isHidden; }
      set { _isHidden = value; }
    }

    private Alachisoft.NCache.Common.Protobuf.ColumnType _columnType = Alachisoft.NCache.Common.Protobuf.ColumnType.ATTRIBUTE_COLUMN;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"columnType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(Alachisoft.NCache.Common.Protobuf.ColumnType.ATTRIBUTE_COLUMN)]
    public Alachisoft.NCache.Common.Protobuf.ColumnType columnType
    {
      get { return _columnType; }
      set { _columnType = value; }
    }

    private Alachisoft.NCache.Common.Protobuf.ColumnDataType _dataType = Alachisoft.NCache.Common.Protobuf.ColumnDataType.OBJECT;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"dataType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(Alachisoft.NCache.Common.Protobuf.ColumnDataType.OBJECT)]
    public Alachisoft.NCache.Common.Protobuf.ColumnDataType dataType
    {
      get { return _dataType; }
      set { _dataType = value; }
    }

    private Alachisoft.NCache.Common.Protobuf.AggregateFunctionType _aggregateFunctionType = Alachisoft.NCache.Common.Protobuf.AggregateFunctionType.NOTAPPLICABLE;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"aggregateFunctionType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(Alachisoft.NCache.Common.Protobuf.AggregateFunctionType.NOTAPPLICABLE)]
    public Alachisoft.NCache.Common.Protobuf.AggregateFunctionType aggregateFunctionType
    {
      get { return _aggregateFunctionType; }
      set { _aggregateFunctionType = value; }
    }

    private bool _isFilled = default(bool);
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"isFilled", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool isFilled
    {
      get { return _isFilled; }
      set { _isFilled = value; }
    }
        
    private bool _isUserSpecifiedColumn = default(bool);
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name = @"isUserSpecifiedColumn", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool isUserSpecifiedColumn
        {
        get { return _isUserSpecifiedColumn; }
        set { _isUserSpecifiedColumn = value; }
    }

    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
}
