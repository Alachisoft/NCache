//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: ClientConnectivityChangeEventResponse.proto
// Note: requires additional types generated from: Commands/ClientInfo.proto
namespace Alachisoft.NCache.Common.Protobuf
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ClientConnectivityChangeEventResponse")]
  public partial class ClientConnectivityChangeEventResponse : global::ProtoBuf.IExtensible
  {
    public ClientConnectivityChangeEventResponse() {}
    

    private string _cacheId = "";
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"cacheId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string cacheId
    {
      get { return _cacheId; }
      set { _cacheId = value; }
    }

    private int _status = default(int);
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"status", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(int))]
    public int status
    {
      get { return _status; }
      set { _status = value; }
    }

    private Alachisoft.NCache.Common.Protobuf.ClientInfo _clientInfo = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"clientInfo", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Alachisoft.NCache.Common.Protobuf.ClientInfo clientInfo
    {
      get { return _clientInfo; }
      set { _clientInfo = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
