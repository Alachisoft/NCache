//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alachisoft.NCache.EntityFrameworkCore.Resources
{
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Alachisoft.NCache.EntityFrameworkCore.Resources.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessor indexes cannot be passed ByRef..
        /// </summary>
        public static string AccessorsCannotHaveByRefArgs {
            get {
                return ResourceManager.GetString("AccessorsCannotHaveByRefArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessor method should not have VarArgs..
        /// </summary>
        public static string AccessorsCannotHaveVarArgs {
            get {
                return ResourceManager.GetString("AccessorsCannotHaveVarArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All case bodies and the default body must have the same type..
        /// </summary>
        public static string AllCaseBodiesMustHaveSameType {
            get {
                return ResourceManager.GetString("AllCaseBodiesMustHaveSameType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All test values must have the same type..
        /// </summary>
        public static string AllTestValuesMustHaveSameType {
            get {
                return ResourceManager.GetString("AllTestValuesMustHaveSameType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot jump to ambiguous label &apos;{0}&apos;..
        /// </summary>
        public static string AmbiguousJump {
            get {
                return ResourceManager.GetString("AmbiguousJump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one key matching &apos;{0}&apos; was found in the ExpandoObject..
        /// </summary>
        public static string AmbiguousMatchInExpandoObject {
            get {
                return ResourceManager.GetString("AmbiguousMatchInExpandoObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument count must be greater than number of named arguments..
        /// </summary>
        public static string ArgCntMustBeGreaterThanNameCnt {
            get {
                return ResourceManager.GetString("ArgCntMustBeGreaterThanNameCnt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument type cannot be System.Void..
        /// </summary>
        public static string ArgumentCannotBeOfTypeVoid {
            get {
                return ResourceManager.GetString("ArgumentCannotBeOfTypeVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The member &apos;{0}&apos; is not declared on type &apos;{1}&apos; being created.
        /// </summary>
        public static string ArgumentMemberNotDeclOnType {
            get {
                return ResourceManager.GetString("ArgumentMemberNotDeclOnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be array.
        /// </summary>
        public static string ArgumentMustBeArray {
            get {
                return ResourceManager.GetString("ArgumentMustBeArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument for array index must be of type Int32.
        /// </summary>
        public static string ArgumentMustBeArrayIndexType {
            get {
                return ResourceManager.GetString("ArgumentMustBeArrayIndexType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be boolean.
        /// </summary>
        public static string ArgumentMustBeBoolean {
            get {
                return ResourceManager.GetString("ArgumentMustBeBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be either a FieldInfo or PropertyInfo.
        /// </summary>
        public static string ArgumentMustBeFieldInfoOrPropertyInfo {
            get {
                return ResourceManager.GetString("ArgumentMustBeFieldInfoOrPropertyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be either a FieldInfo, PropertyInfo or MethodInfo.
        /// </summary>
        public static string ArgumentMustBeFieldInfoOrPropertyInfoOrMethod {
            get {
                return ResourceManager.GetString("ArgumentMustBeFieldInfoOrPropertyInfoOrMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be an instance member.
        /// </summary>
        public static string ArgumentMustBeInstanceMember {
            get {
                return ResourceManager.GetString("ArgumentMustBeInstanceMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be of an integer type.
        /// </summary>
        public static string ArgumentMustBeInteger {
            get {
                return ResourceManager.GetString("ArgumentMustBeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be single-dimensional, zero-based array type.
        /// </summary>
        public static string ArgumentMustBeSingleDimensionalArrayType {
            get {
                return ResourceManager.GetString("ArgumentMustBeSingleDimensionalArrayType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must not have a value type..
        /// </summary>
        public static string ArgumentMustNotHaveValueType {
            get {
                return ResourceManager.GetString("ArgumentMustNotHaveValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument type cannot be void.
        /// </summary>
        public static string ArgumentTypeCannotBeVoid {
            get {
                return ResourceManager.GetString("ArgumentTypeCannotBeVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Argument type &apos;{0}&apos; does not match the corresponding member type &apos;{1}&apos;.
        /// </summary>
        public static string ArgumentTypeDoesNotMatchMember {
            get {
                return ResourceManager.GetString("ArgumentTypeDoesNotMatchMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument types do not match.
        /// </summary>
        public static string ArgumentTypesMustMatch {
            get {
                return ResourceManager.GetString("ArgumentTypesMustMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binary operator {0} is not defined for the types &apos;{1}&apos; and &apos;{2}&apos;..
        /// </summary>
        public static string BinaryOperatorNotDefined {
            get {
                return ResourceManager.GetString("BinaryOperatorNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result type &apos;{0}&apos; of the binder &apos;{1}&apos; is not compatible with the result type &apos;{2}&apos; expected by the call site..
        /// </summary>
        public static string BinderNotCompatibleWithCallSite {
            get {
                return ResourceManager.GetString("BinderNotCompatibleWithCallSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind cannot return null..
        /// </summary>
        public static string BindingCannotBeNull {
            get {
                return ResourceManager.GetString("BindingCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body of catch must have the same type as body of try..
        /// </summary>
        public static string BodyOfCatchMustHaveSameTypeAsBodyOfTry {
            get {
                return ResourceManager.GetString("BodyOfCatchMustHaveSameTypeAsBodyOfTry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both accessors must be static..
        /// </summary>
        public static string BothAccessorsMustBeStatic {
            get {
                return ResourceManager.GetString("BothAccessorsMustBeStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bounds count cannot be less than 1.
        /// </summary>
        public static string BoundsCannotBeLessThanOne {
            get {
                return ResourceManager.GetString("BoundsCannotBeLessThanOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot auto initialize elements of value type through property &apos;{0}&apos;, use assignment instead.
        /// </summary>
        public static string CannotAutoInitializeValueTypeElementThroughProperty {
            get {
                return ResourceManager.GetString("CannotAutoInitializeValueTypeElementThroughProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot auto initialize members of value type through property &apos;{0}&apos;, use assignment instead.
        /// </summary>
        public static string CannotAutoInitializeValueTypeMemberThroughProperty {
            get {
                return ResourceManager.GetString("CannotAutoInitializeValueTypeMemberThroughProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot close over byref parameter &apos;{0}&apos; referenced in lambda &apos;{1}&apos;.
        /// </summary>
        public static string CannotCloseOverByRef {
            get {
                return ResourceManager.GetString("CannotCloseOverByRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CompileToMethod cannot compile constant &apos;{0}&apos; because it is a non-trivial value, such as a live object. Instead, create an expression tree that can construct this value..
        /// </summary>
        public static string CannotCompileConstant {
            get {
                return ResourceManager.GetString("CannotCompileConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamic expressions are not supported by CompileToMethod. Instead, create an expression tree that uses System.Runtime.CompilerServices.CallSite..
        /// </summary>
        public static string CannotCompileDynamic {
            get {
                return ResourceManager.GetString("CannotCompileDynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coalesce used with type that cannot be null.
        /// </summary>
        public static string CoalesceUsedOnNonNullType {
            get {
                return ResourceManager.GetString("CoalesceUsedOnNonNullType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No coercion operator is defined between types &apos;{0}&apos; and &apos;{1}&apos;..
        /// </summary>
        public static string CoercionOperatorNotDefined {
            get {
                return ResourceManager.GetString("CoercionOperatorNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection was modified; enumeration operation may not execute..
        /// </summary>
        public static string CollectionModifiedWhileEnumerating {
            get {
                return ResourceManager.GetString("CollectionModifiedWhileEnumerating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection is read-only..
        /// </summary>
        public static string CollectionReadOnly {
            get {
                return ResourceManager.GetString("CollectionReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot enter an expression--only statements can be jumped into..
        /// </summary>
        public static string ControlCannotEnterExpression {
            get {
                return ResourceManager.GetString("ControlCannotEnterExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot enter a try block..
        /// </summary>
        public static string ControlCannotEnterTry {
            get {
                return ResourceManager.GetString("ControlCannotEnterTry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot leave a filter test..
        /// </summary>
        public static string ControlCannotLeaveFilterTest {
            get {
                return ResourceManager.GetString("ControlCannotLeaveFilterTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot leave a finally block..
        /// </summary>
        public static string ControlCannotLeaveFinally {
            get {
                return ResourceManager.GetString("ControlCannotLeaveFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversion is not supported for arithmetic types without operator overloading..
        /// </summary>
        public static string ConversionIsNotSupportedForArithmeticTypes {
            get {
                return ResourceManager.GetString("ConversionIsNotSupportedForArithmeticTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default body must be supplied if case bodies are not System.Void..
        /// </summary>
        public static string DefaultBodyMustBeSupplied {
            get {
                return ResourceManager.GetString("DefaultBodyMustBeSupplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found duplicate parameter &apos;{0}&apos;. Each ParameterExpression in the list must be a unique object..
        /// </summary>
        public static string DuplicateVariable {
            get {
                return ResourceManager.GetString("DuplicateVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result type &apos;{0}&apos; of the dynamic binding produced by binder &apos;{1}&apos; is not compatible with the result type &apos;{2}&apos; expected by the call site..
        /// </summary>
        public static string DynamicBinderResultNotAssignable {
            get {
                return ResourceManager.GetString("DynamicBinderResultNotAssignable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the dynamic binding produced by the object with type &apos;{0}&apos; for the binder &apos;{1}&apos; needs at least one restriction..
        /// </summary>
        public static string DynamicBindingNeedsRestrictions {
            get {
                return ResourceManager.GetString("DynamicBindingNeedsRestrictions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result type &apos;{0}&apos; of the dynamic binding produced by the object with type &apos;{1}&apos; for the binder &apos;{2}&apos; is not compatible with the result type &apos;{3}&apos; expected by the call site..
        /// </summary>
        public static string DynamicObjectResultNotAssignable {
            get {
                return ResourceManager.GetString("DynamicObjectResultNotAssignable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; of element initializer method &apos;{1}&apos; must not be a pass by reference parameter.
        /// </summary>
        public static string ElementInitializerMethodNoRefOutParam {
            get {
                return ResourceManager.GetString("ElementInitializerMethodNoRefOutParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element initializer method must be named &apos;Add&apos;.
        /// </summary>
        public static string ElementInitializerMethodNotAdd {
            get {
                return ResourceManager.GetString("ElementInitializerMethodNotAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element initializer method must be an instance method.
        /// </summary>
        public static string ElementInitializerMethodStatic {
            get {
                return ResourceManager.GetString("ElementInitializerMethodStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element initializer method must have at least 1 parameter.
        /// </summary>
        public static string ElementInitializerMethodWithZeroArgs {
            get {
                return ResourceManager.GetString("ElementInitializerMethodWithZeroArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration has either not started or has already finished..
        /// </summary>
        public static string EnumerationIsDone {
            get {
                return ResourceManager.GetString("EnumerationIsDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user-defined equality method &apos;{0}&apos; must return a boolean value..
        /// </summary>
        public static string EqualityMustReturnBoolean {
            get {
                return ResourceManager.GetString("EqualityMustReturnBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression must be readable.
        /// </summary>
        public static string ExpressionMustBeReadable {
            get {
                return ResourceManager.GetString("ExpressionMustBeReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression must be writeable.
        /// </summary>
        public static string ExpressionMustBeWriteable {
            get {
                return ResourceManager.GetString("ExpressionMustBeWriteable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression of type &apos;{0}&apos; cannot be used to initialize an array of type &apos;{1}&apos;.
        /// </summary>
        public static string ExpressionTypeCannotInitializeArrayType {
            get {
                return ResourceManager.GetString("ExpressionTypeCannotInitializeArrayType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression of type &apos;{0}&apos; cannot be used for assignment to type &apos;{1}&apos;.
        /// </summary>
        public static string ExpressionTypeDoesNotMatchAssignment {
            get {
                return ResourceManager.GetString("ExpressionTypeDoesNotMatchAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression of type &apos;{0}&apos; cannot be used for constructor parameter of type &apos;{1}&apos;.
        /// </summary>
        public static string ExpressionTypeDoesNotMatchConstructorParameter {
            get {
                return ResourceManager.GetString("ExpressionTypeDoesNotMatchConstructorParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression of type &apos;{0}&apos; cannot be used for label of type &apos;{1}&apos;.
        /// </summary>
        public static string ExpressionTypeDoesNotMatchLabel {
            get {
                return ResourceManager.GetString("ExpressionTypeDoesNotMatchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression of type &apos;{0}&apos; cannot be used for parameter of type &apos;{1}&apos; of method &apos;{2}&apos;.
        /// </summary>
        public static string ExpressionTypeDoesNotMatchMethodParameter {
            get {
                return ResourceManager.GetString("ExpressionTypeDoesNotMatchMethodParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression of type &apos;{0}&apos; cannot be used for parameter of type &apos;{1}&apos;.
        /// </summary>
        public static string ExpressionTypeDoesNotMatchParameter {
            get {
                return ResourceManager.GetString("ExpressionTypeDoesNotMatchParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression of type &apos;{0}&apos; cannot be used for return type &apos;{1}&apos;.
        /// </summary>
        public static string ExpressionTypeDoesNotMatchReturn {
            get {
                return ResourceManager.GetString("ExpressionTypeDoesNotMatchReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression of type &apos;{0}&apos; cannot be invoked.
        /// </summary>
        public static string ExpressionTypeNotInvocable {
            get {
                return ResourceManager.GetString("ExpressionTypeNotInvocable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension node must override the property {0}..
        /// </summary>
        public static string ExtensionNodeMustOverrideProperty {
            get {
                return ResourceManager.GetString("ExtensionNodeMustOverrideProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fault cannot be used with catch or finally clauses.
        /// </summary>
        public static string FaultCannotHaveCatchOrFinally {
            get {
                return ResourceManager.GetString("FaultCannotHaveCatchOrFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field &apos;{0}.{1}&apos; is not defined for type &apos;{2}&apos;.
        /// </summary>
        public static string FieldInfoNotDefinedForType {
            get {
                return ResourceManager.GetString("FieldInfoNotDefinedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field &apos;{0}&apos; is not defined for type &apos;{1}&apos;.
        /// </summary>
        public static string FieldNotDefinedForType {
            get {
                return ResourceManager.GetString("FieldNotDefinedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First argument of delegate must be CallSite.
        /// </summary>
        public static string FirstArgumentMustBeCallSite {
            get {
                return ResourceManager.GetString("FirstArgumentMustBeCallSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No generic method &apos;{0}&apos; on type &apos;{1}&apos; is compatible with the supplied type arguments and arguments. No type arguments should be provided if the method is non-generic. .
        /// </summary>
        public static string GenericMethodWithArgsDoesNotExistOnType {
            get {
                return ResourceManager.GetString("GenericMethodWithArgsDoesNotExistOnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments for the given members .
        /// </summary>
        public static string IncorrectNumberOfArgumentsForMembers {
            get {
                return ResourceManager.GetString("IncorrectNumberOfArgumentsForMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments for constructor.
        /// </summary>
        public static string IncorrectNumberOfConstructorArguments {
            get {
                return ResourceManager.GetString("IncorrectNumberOfConstructorArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of indexes.
        /// </summary>
        public static string IncorrectNumberOfIndexes {
            get {
                return ResourceManager.GetString("IncorrectNumberOfIndexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments supplied for lambda invocation.
        /// </summary>
        public static string IncorrectNumberOfLambdaArguments {
            get {
                return ResourceManager.GetString("IncorrectNumberOfLambdaArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of parameters supplied for lambda declaration.
        /// </summary>
        public static string IncorrectNumberOfLambdaDeclarationParameters {
            get {
                return ResourceManager.GetString("IncorrectNumberOfLambdaDeclarationParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Incorrect number of members for constructor.
        /// </summary>
        public static string IncorrectNumberOfMembersForGivenConstructor {
            get {
                return ResourceManager.GetString("IncorrectNumberOfMembersForGivenConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of arguments supplied for call to method &apos;{0}&apos;.
        /// </summary>
        public static string IncorrectNumberOfMethodCallArguments {
            get {
                return ResourceManager.GetString("IncorrectNumberOfMethodCallArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect number of type arguments were specified for the declaration of an Action type..
        /// </summary>
        public static string IncorrectNumberOfTypeArgsForAction {
            get {
                return ResourceManager.GetString("IncorrectNumberOfTypeArgsForAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect number of type arguments were specified for the declaration of a Func type..
        /// </summary>
        public static string IncorrectNumberOfTypeArgsForFunc {
            get {
                return ResourceManager.GetString("IncorrectNumberOfTypeArgsForFunc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type used in TypeAs Expression must be of reference or nullable type, {0} is neither.
        /// </summary>
        public static string IncorrectTypeForTypeAs {
            get {
                return ResourceManager.GetString("IncorrectTypeForTypeAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexing parameters of getter and setter must match..
        /// </summary>
        public static string IndexesOfSetGetMustMatch {
            get {
                return ResourceManager.GetString("IndexesOfSetGetMustMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; declared on type &apos;{1}&apos; cannot be called with instance of type &apos;{2}&apos;.
        /// </summary>
        public static string InstanceAndMethodTypeMismatch {
            get {
                return ResourceManager.GetString("InstanceAndMethodTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance field &apos;{0}&apos; is not defined for type &apos;{1}&apos;.
        /// </summary>
        public static string InstanceFieldNotDefinedForType {
            get {
                return ResourceManager.GetString("InstanceFieldNotDefinedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance property &apos;{0}&apos; is not defined for type &apos;{1}&apos;.
        /// </summary>
        public static string InstancePropertyNotDefinedForType {
            get {
                return ResourceManager.GetString("InstancePropertyNotDefinedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance property &apos;{0}&apos; that takes no argument is not defined for type &apos;{1}&apos;.
        /// </summary>
        public static string InstancePropertyWithoutParameterNotDefinedForType {
            get {
                return ResourceManager.GetString("InstancePropertyWithoutParameterNotDefinedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance property &apos;{0}{1}&apos; is not defined for type &apos;{2}&apos;.
        /// </summary>
        public static string InstancePropertyWithSpecifiedParametersNotDefinedForType {
            get {
                return ResourceManager.GetString("InstancePropertyWithSpecifiedParametersNotDefinedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid argument value.
        /// </summary>
        public static string InvalidArgumentValue {
            get {
                return ResourceManager.GetString("InvalidArgumentValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid lvalue for assignment: {0}..
        /// </summary>
        public static string InvalidLvalue {
            get {
                return ResourceManager.GetString("InvalidLvalue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An IDynamicMetaObjectProvider {0} created an invalid DynamicMetaObject instance..
        /// </summary>
        public static string InvalidMetaObjectCreated {
            get {
                return ResourceManager.GetString("InvalidMetaObjectCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value null is not of type &apos;{0}&apos; and cannot be used in this collection..
        /// </summary>
        public static string InvalidNullValue {
            get {
                return ResourceManager.GetString("InvalidNullValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not of type &apos;{1}&apos; and cannot be used in this collection..
        /// </summary>
        public static string InvalidObjectType {
            get {
                return ResourceManager.GetString("InvalidObjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only unbox from an object or interface type to a value type..
        /// </summary>
        public static string InvalidUnboxType {
            get {
                return ResourceManager.GetString("InvalidUnboxType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified key &apos;{0}&apos; does not exist in the ExpandoObject..
        /// </summary>
        public static string KeyDoesNotExistInExpando {
            get {
                return ResourceManager.GetString("KeyDoesNotExistInExpando", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Label type must be System.Void if an expression is not supplied.
        /// </summary>
        public static string LabelMustBeVoidOrHaveExpression {
            get {
                return ResourceManager.GetString("LabelMustBeVoidOrHaveExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot redefine label &apos;{0}&apos; in an inner block..
        /// </summary>
        public static string LabelTargetAlreadyDefined {
            get {
                return ResourceManager.GetString("LabelTargetAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot jump to undefined label &apos;{0}&apos;..
        /// </summary>
        public static string LabelTargetUndefined {
            get {
                return ResourceManager.GetString("LabelTargetUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must be System.Void for this label argument.
        /// </summary>
        public static string LabelTypeMustBeVoid {
            get {
                return ResourceManager.GetString("LabelTypeMustBeVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lambda type parameter must be derived from System.MulticastDelegate.
        /// </summary>
        public static string LambdaTypeMustBeDerivedFromSystemDelegate {
            get {
                return ResourceManager.GetString("LambdaTypeMustBeDerivedFromSystemDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user-defined operator method &apos;{1}&apos; for operator &apos;{0}&apos; must have associated boolean True and False operators..
        /// </summary>
        public static string LogicalOperatorMustHaveBooleanOperators {
            get {
                return ResourceManager.GetString("LogicalOperatorMustHaveBooleanOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; not field or property.
        /// </summary>
        public static string MemberNotFieldOrProperty {
            get {
                return ResourceManager.GetString("MemberNotFieldOrProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0} contains generic parameters.
        /// </summary>
        public static string MethodContainsGenericParameters {
            get {
                return ResourceManager.GetString("MethodContainsGenericParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0} is a generic method definition.
        /// </summary>
        public static string MethodIsGeneric {
            get {
                return ResourceManager.GetString("MethodIsGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}.{1}&apos; is not a property accessor.
        /// </summary>
        public static string MethodNotPropertyAccessor {
            get {
                return ResourceManager.GetString("MethodNotPropertyAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No method &apos;{0}&apos; on type &apos;{1}&apos; is compatible with the supplied arguments..
        /// </summary>
        public static string MethodWithArgsDoesNotExistOnType {
            get {
                return ResourceManager.GetString("MethodWithArgsDoesNotExistOnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one method &apos;{0}&apos; on type &apos;{1}&apos; is compatible with the supplied arguments..
        /// </summary>
        public static string MethodWithMoreThanOneMatch {
            get {
                return ResourceManager.GetString("MethodWithMoreThanOneMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to must be reducible node.
        /// </summary>
        public static string MustBeReducible {
            get {
                return ResourceManager.GetString("MustBeReducible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to node cannot reduce to itself or null.
        /// </summary>
        public static string MustReduceToDifferent {
            get {
                return ResourceManager.GetString("MustReduceToDifferent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rewriting child expression from type &apos;{0}&apos; to type &apos;{1}&apos; is not allowed, because it would change the meaning of the operation. If this is intentional, override &apos;{2}&apos; and change it to allow this rewrite..
        /// </summary>
        public static string MustRewriteChildToSameType {
            get {
                return ResourceManager.GetString("MustRewriteChildToSameType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When called from &apos;{0}&apos;, rewriting a node of type &apos;{1}&apos; must return a non-null value of the same type. Alternatively, override &apos;{2}&apos; and change it to not visit children of this type..
        /// </summary>
        public static string MustRewriteToSameNode {
            get {
                return ResourceManager.GetString("MustRewriteToSameNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rewritten expression calls operator method &apos;{0}&apos;, but the original node had no operator method. If this is intentional, override &apos;{1}&apos; and change it to allow this rewrite..
        /// </summary>
        public static string MustRewriteWithoutMethod {
            get {
                return ResourceManager.GetString("MustRewriteWithoutMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t compile a NewExpression with a constructor declared on an abstract class.
        /// </summary>
        public static string NonAbstractConstructorRequired {
            get {
                return ResourceManager.GetString("NonAbstractConstructorRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-empty collection required.
        /// </summary>
        public static string NonEmptyCollectionRequired {
            get {
                return ResourceManager.GetString("NonEmptyCollectionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot jump to non-local label &apos;{0}&apos; with a value. Only jumps to labels defined in outer blocks can pass values..
        /// </summary>
        public static string NonLocalJumpWithValue {
            get {
                return ResourceManager.GetString("NonLocalJumpWithValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constructor should not be static.
        /// </summary>
        public static string NonStaticConstructorRequired {
            get {
                return ResourceManager.GetString("NonStaticConstructorRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No or Invalid rule produced.
        /// </summary>
        public static string NoOrInvalidRuleProduced {
            get {
                return ResourceManager.GetString("NoOrInvalidRuleProduced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a member of any type.
        /// </summary>
        public static string NotAMemberOfAnyType {
            get {
                return ResourceManager.GetString("NotAMemberOfAnyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a member of type &apos;{1}&apos;.
        /// </summary>
        public static string NotAMemberOfType {
            get {
                return ResourceManager.GetString("NotAMemberOfType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static field requires null instance, non-static field requires non-null instance..
        /// </summary>
        public static string OnlyStaticFieldsHaveNullInstance {
            get {
                return ResourceManager.GetString("OnlyStaticFieldsHaveNullInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static method requires null instance, non-static method requires non-null instance..
        /// </summary>
        public static string OnlyStaticMethodsHaveNullInstance {
            get {
                return ResourceManager.GetString("OnlyStaticMethodsHaveNullInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static property requires null instance, non-static property requires non-null instance..
        /// </summary>
        public static string OnlyStaticPropertiesHaveNullInstance {
            get {
                return ResourceManager.GetString("OnlyStaticPropertiesHaveNullInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operands for operator &apos;{0}&apos; do not match the parameters of method &apos;{1}&apos;..
        /// </summary>
        public static string OperandTypesDoNotMatchParameters {
            get {
                return ResourceManager.GetString("OperandTypesDoNotMatchParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be greater than or equal to {1}.
        /// </summary>
        public static string OutOfRange {
            get {
                return ResourceManager.GetString("OutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type of overload method for operator &apos;{0}&apos; does not match the parameter type of conversion method &apos;{1}&apos;..
        /// </summary>
        public static string OverloadOperatorTypeDoesNotMatchConversionType {
            get {
                return ResourceManager.GetString("OverloadOperatorTypeDoesNotMatchConversionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ParameterExpression of type &apos;{0}&apos; cannot be used for delegate parameter of type &apos;{1}&apos;.
        /// </summary>
        public static string ParameterExpressionNotValidAsDelegate {
            get {
                return ResourceManager.GetString("ParameterExpressionNotValidAsDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DebugInfoGenerator created by CreatePdbGenerator can only be used with LambdaExpression.CompileToMethod..
        /// </summary>
        public static string PdbGeneratorNeedsExpressionCompiler {
            get {
                return ResourceManager.GetString("PdbGeneratorNeedsExpressionCompiler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property cannot have a managed pointer type..
        /// </summary>
        public static string PropertyCannotHaveRefType {
            get {
                return ResourceManager.GetString("PropertyCannotHaveRefType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; has no &apos;get&apos; or &apos;set&apos; accessors.
        /// </summary>
        public static string PropertyDoesNotHaveAccessor {
            get {
                return ResourceManager.GetString("PropertyDoesNotHaveAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; has no &apos;get&apos; accessor.
        /// </summary>
        public static string PropertyDoesNotHaveGetter {
            get {
                return ResourceManager.GetString("PropertyDoesNotHaveGetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; has no &apos;set&apos; accessor.
        /// </summary>
        public static string PropertyDoesNotHaveSetter {
            get {
                return ResourceManager.GetString("PropertyDoesNotHaveSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property &apos;{0}&apos; is not defined for type &apos;{1}&apos;.
        /// </summary>
        public static string PropertyNotDefinedForType {
            get {
                return ResourceManager.GetString("PropertyNotDefinedForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property cannot have a void type..
        /// </summary>
        public static string PropertyTypeCannotBeVoid {
            get {
                return ResourceManager.GetString("PropertyTypeCannotBeVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property type must match the value type of getter.
        /// </summary>
        public static string PropertyTypeMustMatchGetter {
            get {
                return ResourceManager.GetString("PropertyTypeMustMatchGetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property type must match the value type of setter.
        /// </summary>
        public static string PropertyTypeMustMatchSetter {
            get {
                return ResourceManager.GetString("PropertyTypeMustMatchSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one property &apos;{0}&apos; on type &apos;{1}&apos; is compatible with the supplied arguments..
        /// </summary>
        public static string PropertyWithMoreThanOneMatch {
            get {
                return ResourceManager.GetString("PropertyWithMoreThanOneMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quoted expression must be a lambda.
        /// </summary>
        public static string QuotedExpressionMustBeLambda {
            get {
                return ResourceManager.GetString("QuotedExpressionMustBeLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cannot assign from the reduced node type to the original node type.
        /// </summary>
        public static string ReducedNotCompatible {
            get {
                return ResourceManager.GetString("ReducedNotCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to reducible nodes must override Expression.Reduce().
        /// </summary>
        public static string ReducibleMustOverrideReduce {
            get {
                return ResourceManager.GetString("ReducibleMustOverrideReduce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference equality is not defined for the types &apos;{0}&apos; and &apos;{1}&apos;..
        /// </summary>
        public static string ReferenceEqualityNotDefined {
            get {
                return ResourceManager.GetString("ReferenceEqualityNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rethrow statement is valid only inside a Catch block..
        /// </summary>
        public static string RethrowRequiresCatch {
            get {
                return ResourceManager.GetString("RethrowRequiresCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An element with the same key &apos;{0}&apos; already exists in the ExpandoObject..
        /// </summary>
        public static string SameKeyExistsInExpando {
            get {
                return ResourceManager.GetString("SameKeyExistsInExpando", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setter must have parameters..
        /// </summary>
        public static string SetterHasNoParams {
            get {
                return ResourceManager.GetString("SetterHasNoParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setter should have void type..
        /// </summary>
        public static string SetterMustBeVoid {
            get {
                return ResourceManager.GetString("SetterMustBeVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start and End must be well ordered.
        /// </summary>
        public static string StartEndMustBeOrdered {
            get {
                return ResourceManager.GetString("StartEndMustBeOrdered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch value of type &apos;{0}&apos; cannot be used for the comparison method parameter of type &apos;{1}&apos;.
        /// </summary>
        public static string SwitchValueTypeDoesNotMatchComparisonMethodParameter {
            get {
                return ResourceManager.GetString("SwitchValueTypeDoesNotMatchComparisonMethodParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test value of type &apos;{0}&apos; cannot be used for the comparison method parameter of type &apos;{1}&apos;.
        /// </summary>
        public static string TestValueTypeDoesNotMatchComparisonMethodParameter {
            get {
                return ResourceManager.GetString("TestValueTypeDoesNotMatchComparisonMethodParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to try must have at least one catch, finally, or fault clause.
        /// </summary>
        public static string TryMustHaveCatchFinallyOrFault {
            get {
                return ResourceManager.GetString("TryMustHaveCatchFinallyOrFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try expression is not allowed inside a filter body..
        /// </summary>
        public static string TryNotAllowedInFilter {
            get {
                return ResourceManager.GetString("TryNotAllowedInFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TryExpression is not supported as an argument to method &apos;{0}&apos; because it has an argument with by-ref type. Construct the tree so the TryExpression is not nested inside of this expression..
        /// </summary>
        public static string TryNotSupportedForMethodsWithRefArgs {
            get {
                return ResourceManager.GetString("TryNotSupportedForMethodsWithRefArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TryExpression is not supported as a child expression when accessing a member on type &apos;{0}&apos; because it is a value type. Construct the tree so the TryExpression is not nested inside of this expression..
        /// </summary>
        public static string TryNotSupportedForValueTypeInstances {
            get {
                return ResourceManager.GetString("TryNotSupportedForValueTypeInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} contains generic parameters.
        /// </summary>
        public static string TypeContainsGenericParameters {
            get {
                return ResourceManager.GetString("TypeContainsGenericParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} is a generic type definition.
        /// </summary>
        public static string TypeIsGeneric {
            get {
                return ResourceManager.GetString("TypeIsGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; does not have a default constructor.
        /// </summary>
        public static string TypeMissingDefaultConstructor {
            get {
                return ResourceManager.GetString("TypeMissingDefaultConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must be derived from System.Delegate.
        /// </summary>
        public static string TypeMustBeDerivedFromSystemDelegate {
            get {
                return ResourceManager.GetString("TypeMustBeDerivedFromSystemDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must not be ByRef.
        /// </summary>
        public static string TypeMustNotBeByRef {
            get {
                return ResourceManager.GetString("TypeMustNotBeByRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type must not be a pointer type.
        /// </summary>
        public static string TypeMustNotBePointer {
            get {
                return ResourceManager.GetString("TypeMustNotBePointer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is not IEnumerable.
        /// </summary>
        public static string TypeNotIEnumerable {
            get {
                return ResourceManager.GetString("TypeNotIEnumerable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter is {0}. Expected a delegate..
        /// </summary>
        public static string TypeParameterIsNotDelegate {
            get {
                return ResourceManager.GetString("TypeParameterIsNotDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unary operator {0} is not defined for the type &apos;{1}&apos;..
        /// </summary>
        public static string UnaryOperatorNotDefined {
            get {
                return ResourceManager.GetString("UnaryOperatorNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to variable &apos;{0}&apos; of type &apos;{1}&apos; referenced from scope &apos;{2}&apos;, but it is not defined.
        /// </summary>
        public static string UndefinedVariable {
            get {
                return ResourceManager.GetString("UndefinedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected VarArgs call to method &apos;{0}&apos;.
        /// </summary>
        public static string UnexpectedVarArgsCall {
            get {
                return ResourceManager.GetString("UnexpectedVarArgsCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled binary: {0}.
        /// </summary>
        public static string UnhandledBinary {
            get {
                return ResourceManager.GetString("UnhandledBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled binding .
        /// </summary>
        public static string UnhandledBinding {
            get {
                return ResourceManager.GetString("UnhandledBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled Binding Type: {0}.
        /// </summary>
        public static string UnhandledBindingType {
            get {
                return ResourceManager.GetString("UnhandledBindingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled unary: {0}.
        /// </summary>
        public static string UnhandledUnary {
            get {
                return ResourceManager.GetString("UnhandledUnary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown binding type.
        /// </summary>
        public static string UnknownBindingType {
            get {
                return ResourceManager.GetString("UnknownBindingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression type &apos;{0}&apos; is not supported.
        /// </summary>
        public static string UnsupportedExpressionType {
            get {
                return ResourceManager.GetString("UnsupportedExpressionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operator method &apos;{0}&apos; must be static..
        /// </summary>
        public static string UserDefinedOperatorMustBeStatic {
            get {
                return ResourceManager.GetString("UserDefinedOperatorMustBeStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operator method &apos;{0}&apos; must not be void..
        /// </summary>
        public static string UserDefinedOperatorMustNotBeVoid {
            get {
                return ResourceManager.GetString("UserDefinedOperatorMustNotBeVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user-defined operator method &apos;{1}&apos; for operator &apos;{0}&apos; must have identical parameter and return types..
        /// </summary>
        public static string UserDefinedOpMustHaveConsistentTypes {
            get {
                return ResourceManager.GetString("UserDefinedOpMustHaveConsistentTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user-defined operator method &apos;{1}&apos; for operator &apos;{0}&apos; must return the same type as its parameter or a derived type..
        /// </summary>
        public static string UserDefinedOpMustHaveValidReturnType {
            get {
                return ResourceManager.GetString("UserDefinedOpMustHaveValidReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &apos;{0}&apos; uses unsupported type &apos;{1}&apos;. Reference types are not supported for variables..
        /// </summary>
        public static string VariableMustNotBeByRef {
            get {
                return ResourceManager.GetString("VariableMustNotBeByRef", resourceCulture);
            }
        }
    }
}
